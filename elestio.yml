ports:
  - protocol: "HTTPS"
    targetProtocol: "HTTP"
    listeningPort: "443"
    targetPort: "2345"
    targetIP: "172.17.0.1"
    public: true
    path: "/"
    isAuth: false
  - protocol: "HTTPS"
    targetProtocol: "HTTP"
    listeningPort: "8045"
    targetPort: "4580"
    targetIP: "172.17.0.1"
    public: true
    path: "/"
    isAuth: false
environments:
  - key: "NODE_ENV"
    value: "production"
  - key: "SECRET_KEY"
    value: "random_password"
  - key: "UTILS_SECRET"
    value: "random_password"
  - key: "DATABASE_URL"
    value: "postgres://user:pass@localhost:5432/outline"
  - key: "DATABASE_URL_TEST"
    value: "postgres://user:pass@localhost:5432/outline-test"
  - key: "DATABASE_CONNECTION_POOL_MIN"
    value: ""
  - key: "DATABASE_CONNECTION_POOL_MAX"
    value: ""
  - key: "PGSSLMODE"
    value: "disable"
  - key: "REDIS_URL"
    value: "redis://localhost:6379"
  - key: "URL"
    value: "https://[CI_CD_DOMAIN]:3000"
  - key: "PORT"
    value: "3000"

config:
  runTime: "dockerCompose"
  version: ""
  framework: ""
  buildCommand: "docker-compose build"
  buildDir: "/"
  runCommand: "docker-compose up -d"
  icon: ""
  screenshot: "outline.png"
lifeCycleConfig:
  preInstallCommand: "./scripts/preInstall.sh"
  postInstallCommand: "./scripts/postInstall.sh"
  preBackupCommand: "./scripts/preBackup.sh"
  postBackupCommand: "./scripts/postBackup.sh"
  preRestoreCommand: "./scripts/preRestore.sh"
  postRestoreCommand: "./scripts/postRestore.sh"
  postDeployCommand: "./scripts/postDeploy.sh"
webUI:
  - url: "https://[CI_CD_DOMAIN]"
    label: "Outline Admin"
    login: "[ADMIN_EMAIL]"
    password: "[ADMIN_PASSWORD]"
